#!python

import argparse
import os
import sys
import shutil

import pandas as pd
import seaborn as sns

import hicutils as hu


if __name__ == '__main__':
    parser = argparse.ArgumentParser('Run quality control on IgBLAST output')
    parser.add_argument('directories', nargs='+')
    parser.add_argument('--output', default='./output')
    parser.add_argument('--delete', action='store_true', default=False)
    args = parser.parse_args()

    if os.path.isdir(args.output):
        if not args.delete:
            hu.logger.error(
                f'Directory {args.output} already exists.  Manually delete'
                'or pass the "--delete" flag'
            )
            sys.exit()
        else:
            shutil.rmtree(args.output)
            hu.logger.info(f'Deleted directory {args.output}')
    hu.logger.info(f'Creating output directory {args.output}')
    os.makedirs(args.output)

    hu.logger.info(f'Loading data from {", ".join(args.directories)}')
    df = pd.concat([hu.io.convert_igblast(d) for d in args.directories])

    subject_colors = dict(zip(df.subject.unique(), sns.color_palette()))

    # Clone counts
    hu.logger.info('Plotting clone sizes')
    pdf = (
        df.groupby(['subject', 'replicate_name'])
        .clone_id.nunique()
        .to_frame()
        .reset_index()
        .sort_values('subject')
    )

    g = sns.catplot(
        data=pdf,
        x='replicate_name',
        y='clone_id',
        hue='subject',
        palette=subject_colors,
        kind='bar',
    )
    g.axes[0][0].set_xticklabels(g.axes[0][0].get_xticklabels(), rotation=90)
    hu.io.save_fig_and_data('clone_size', pdf, path=args.output)

    # Similarity
    for metric in ('cosine', 'jaccard'):
        hu.logger.info(f'Plotting {metric} similarity')
        try:
            g, pdf = hu.plots.plot_similarity(
                df,
                ['subject', 'replicate_name'],
                metric,
                clone_features='cdr3_aa',
            )
            hu.io.save_fig_and_data(
                f'similarity_{metric}', pdf, path=args.output
            )
        except IndexError:
            hu.logger.warning(
                'Similarity not calculated as there was only one replicate'
            )

    # String plots
    hu.logger.info('Plotting string plots')
    try:
        g, pdf = hu.plots.plot_strings(
            df,
            'replicate_name',
            overlapping_features=['cdr3_aa'],
            scale='log',
            col_order=lambda s: sorted(s.columns),
        )
        hu.io.save_fig_and_data('overlap_string', pdf, path=args.output)
    except IndexError:
        hu.logger.warning(
            'Similarity not calculated as there was only one replicate'
        )

    # VH usage
    hu.logger.info('Plotting VH usage')
    g, pdf = hu.plots.plot_gene_frequency(
        df, ['subject'], 'v_gene', size_metric='clones', by='subject'
    )
    hu.io.save_fig_and_data('v_usage', pdf, path=args.output)
